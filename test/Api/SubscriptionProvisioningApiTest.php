<?php
/**
 * SubscriptionProvisioningApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\ProvisionerApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Yoast.com provisioning API
 *
 * The Yoast provisioning API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\ProvisionerApiClient;

use Yoast\ProvisionerApiClient\Configuration;
use Yoast\ProvisionerApiClient\ApiException;
use Yoast\ProvisionerApiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SubscriptionProvisioningApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\ProvisionerApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SubscriptionProvisioningApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for subscriptionProvisioningControllerCancelSubscription
     *
     * Cancel a single subscription.
     *
     */
    public function testSubscriptionProvisioningControllerCancelSubscription()
    {
    }

    /**
     * Test case for subscriptionProvisioningControllerCreate
     *
     * Create a subscription.
     *
     */
    public function testSubscriptionProvisioningControllerCreate()
    {
    }

    /**
     * Test case for subscriptionProvisioningControllerGetOne
     *
     * Get a subscription.
     *
     */
    public function testSubscriptionProvisioningControllerGetOne()
    {
    }

    /**
     * Test case for subscriptionProvisioningControllerRefundSubscription
     *
     * Refund a single subscription.
     *
     */
    public function testSubscriptionProvisioningControllerRefundSubscription()
    {
    }

    /**
     * Test case for subscriptionProvisioningControllerRenewSubscription
     *
     * Renew a subscription.
     *
     */
    public function testSubscriptionProvisioningControllerRenewSubscription()
    {
    }

    /**
     * Test case for subscriptionProvisioningControllerSetSiteForSubscription
     *
     * Link a subscription to a site.
     *
     */
    public function testSubscriptionProvisioningControllerSetSiteForSubscription()
    {
    }
}
